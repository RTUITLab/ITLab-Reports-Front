trigger:
- master
- develop

name: $(BuildID)-$(Build.SourceBranchName)

pool:
  vmImage: 'ubuntu-latest'

variables:
  ${{ if notIn(variables['Build.SourceBranchName'], 'master', 'develop') }}:
    buildCommand: 'run developbuild'
    buildImage: false
    deployService: false
    deployEnvironment: 'no'
    imageTags: 'no'
    serviceName: 'no'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    buildCommand: 'run developbuild'
    buildImage: true
    deployService: true
    deployEnvironment: 'development'
    imageTags: |
      $(Build.BuildId)
      develop
    serviceName: itlab_reports-develop-front
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    buildCommand: 'run build'
    buildImage: true
    deployService: true
    deployEnvironment: 'production'
    imageTags: |
      $(Build.BuildId)
      latest
    serviceName: itlab_reports-front


stages:
  - stage: build
    displayName: Build
    jobs:
      - job: buildFront
        steps:
          - task: file-creator@6
            displayName: Create .env file
            inputs:
              filepath: '.env'
              filecontent: 'NODE_ENV=${{deployEnvironment}}'
              fileoverwrite: true
              endWithNewLine: true
          - task: Npm@1
            displayName: npm ci
            inputs:
              command: 'ci'
          - task: Npm@1
            displayName: npm run build
            inputs:
              command: 'custom'
              customCommand: buildCommand
          - publish: deploy
            artifact: itlab-reports-front-pack
  - stage: buildImage
    condition: and(succeeded(), ${{variables.buildImage}})
    jobs:
      - job:
        steps:
        - download: current
          displayName: Download itlab-reports-front-pack
          artifact: 'itlab-reports-front-pack'
        - task: Docker@2
          inputs:
            containerRegistry: 'rtuitlab connection by admin'
            repository: 'rtuitlab/itlab-reports-front'
            command: 'buildAndPush'
            Dockerfile: '$(Pipeline.Workspace)/itlab-reports-front-pack/Dockerfile'
            buildContext: '$(Pipeline.Workspace)/itlab-reports-front-pack'
            tags: ${{variables.imageTags}}
  - stage: deploy
    condition: and(succeeded(), ${{variables.deployService}})
    jobs:
      - deployment: deploy
        displayName: Deploy
        pool:
          vmImage: "ubuntu-latest"
        environment: ${{variables.deployEnvironment}}
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - task: SSH@0
                  inputs:
                    sshEndpoint: 'swarm manager'
                    runOptions: 'commands'
                    commands: 'docker service update --image rtuitlab/itlab-reports-front:$(Build.BuildId) ${{variables.serviceName}}'
                    readyTimeout: '20000'